name: Continuous Deployment Workflow

on:
  workflow_dispatch:
    inputs:
      image_registry:
        description: 'The registry of the image'
        required: true
        default: "ghcr.io"
      image_repository:
        description: 'The repository of the image'
        required: true
      image_tag:
        description: 'The tag of the image'
        required: true
        default: "latest"

env:
  IMAGE_REGISTRY: ${{ github.event.inputs.image_registry }}
  IMAGE_REPOSITORY: ${{ github.event.inputs.image_repository }}
  IMAGE_TAG: ${{ github.event.inputs.image_tag }}
  CHART_URL: https://github.com/tradecrit/helm-charts/releases/tag/webserver-0.1.12

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  development:
    name: Deploy to development
    runs-on: ubuntu-latest

    env:
      CLUSTER_ID: engineering-6a5eb20
      NAMESPACE: plaid
      ENVIRONMENT: development

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: azure/setup-kubectl@v3
        id: install-kubectl

      - uses: azure/setup-helm@v4.2.0
        id: install-helm

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ env.CLUSTER_ID }}

      - name: Get release name
        id: get_release_name
        run: |
          echo "RELEASE_NAME=$(cat package.json | jq -r .name)" >> "$GITHUB_OUTPUT"

      - name: Deploy application
        run: |
          helm dependency update deployment/service
          
          echo "Deploying to ${{ env.ENVIRONMENT }} environment"
          echo "Release name: ${{ steps.get_release_name.outputs.RELEASE_NAME }}"
          echo "Image repository: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}"
          echo "Image tag: ${{ env.IMAGE_TAG }}"
          
          helm upgrade --install ${{ steps.get_release_name.outputs.RELEASE_NAME }} \
          --values ./deployment/${{ env.ENVIRONMENT }}.yaml \
          --set webserver.deployment.image.repository=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }} \
          --set webserver.deployment.image.tag=${{ env.IMAGE_TAG }} \
          --namespace ${{ env.NAMESPACE }} \
          ${{ env.CHART_URL }}
